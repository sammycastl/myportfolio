---
import BaseLayout from '../layouts/BaseLayout.astro';
---

<BaseLayout title="Generador de Reportes">
  <section class="project-detail-section">
    <div class="project-container">
      <!-- Encabezado del proyecto -->
      <div class="project-header">
        <h1>Generador de Reportes <span class="project-icon"></span></h1>
      </div>

      <!-- Contenido principal -->
      <div class="project-content">
        <!-- Resumen ejecutivo -->
        <div class="project-section">
          <h2> Resumen del Proyecto</h2>
          <p>
            Sistema en la nube para generar y gestionar reportes de Pokémon utilizando datos de la PokeAPI. La 
            aplicación permite crear reportes enriquecidos que incluyen las estadísticas base y habilidades de 
            cada Pokémon, aplicar muestreo aleatorio para obtener conjuntos de datos de tamaño personalizado y 
            eliminar permanentemente reportes tanto de la base de datos como del almacenamiento en la nube. El 
            frontend, desarrollado con Next.js, ofrece una interfaz intuitiva y responsiva. El backend, implementado 
            con FastAPI, gestiona la lógica de negocio y las integraciones, mientras que el procesamiento asíncrono 
            se maneja con Azure Functions en Python. La persistencia de datos se realiza en Azure SQL Database y 
            los archivos CSV se almacenan en Azure Blob Storage. El despliegue y la configuración de la infraestructura 
            se automatizan mediante Terraform.

Este proyecto destaca por su arquitectura modular, escalable y robusta, con un manejo eficiente de datos e integración fluida de servicios en la nube.
          </p>
        </div>

        <!-- Arquitectura -->
        <div class="project-section">
          <div class="architecture-grid">
            <div class="arch-components">
              <h3>Tecnologias Clave:</h3>
              <ul>
                <li>Next.js</li>
                <li>FastAPI</li>
                <li>Azure Functions</li>
                <li>Azure SQL</li>
                <li>Blob Storage</li>
                <li>Terraform</li>
              </ul>
            </div>
          </div>
        </div>

        <!-- Implementación técnica -->
        <div class="project-section">
          <h2>Implementación Técnica</h2>
          
          <div class="tech-grid">
            <!-- Eliminar -->
            <div class="tech-category">
              <h3>Eliminar</h3>
              <ul>
                <li>Se agregó la capacidad de eliminar reportes, tanto del frontend (Next.js) como del backend (FastAPI), incluyendo la limpieza de registros asociados en la base de datos (Azure SQL DB) y el almacenamiento (Azure Blob Storage).</li>
              </ul>
            </div>
            
            <!-- Enriquecer Reporte -->
            <div class="tech-category">
              <h3>Enriquecer Reporte</h3>
              <ul>
                <li>Se mejoró el procesamiento del worker (Azure Function) para incluir datos adicionales de la PokeAPI (como habilidades, tipos y estadísticas) en el CSV generado, asegurando un reporte más detallado y útil.</li>
              </ul>
            </div>

            <!-- Muestreo Aleatorio -->
            <div class="tech-category">
              <h3>Muestreo Aleatorio</h3>
              <ul>
                <li>Se añadió un campo numérico ("Número de Registros").</li>
                <li>Se extendió el endpoint de creación para aceptar el parámetro sample_size y se almacenó en la base de datos.</li>
                <li>Se implementó lógica para, al procesar el reporte, aplicar muestreo aleatorio (con random.sample()) cuando sample_size es válido, generando un CSV con un subconjunto aleatorio de los datos.</li>
              </ul>
            </div>
          </div>
        </div>

        <!-- Repositorios -->
        <div class="project-section repos">
          <h2>Repositorios y Documentación</h2>
          <div class="repo-links">
            <a href="https://github.com/sammycastl/pokequeue_terraform.git" class="repo-button" target="_blank" rel="noopener noreferrer">
              <span></span>Terraform
            </a>
            <a href="https://github.com/sammycastl/pokequeue_db.git" class="repo-button" target="_blank" rel="noopener noreferrer">
              <span></span>DB
            </a>
            <a href="https://github.com/sammycastl/pokequeue_api.git" class="repo-button" target="_blank" rel="noopener noreferrer">
              <span></span>API
            </a>
            <a href="https://github.com/sammycastl/pokequeue_appfunction.git" class="repo-button" target="_blank" rel="noopener noreferrer">
              <span></span>FunctionApp
            </a>
            <a href="https://github.com/sammycastl/pokequeue_ui.git" class="repo-button" target="_blank" rel="noopener noreferrer">
              <span></span>UI
            </a>
          </div>
        </div>
      </div>
      
      <!-- URLs de Acceso -->
        <div class="project-section repos">
          <h2>URLs de Acceso</h2>
          <div class="repo-links">
            <a href="https://ui-pokequeue-dev-fl.azurewebsites.net" class="repo-button" target="_blank" rel="noopener noreferrer">
              <span></span>UI
            </a>
            <a href="https://api-pokequeue-dev-fl.azurewebsites.net" class="repo-button" target="_blank" rel="noopener noreferrer">
              <span></span>API
            </a>
          </div>
        </div>
      </div>

      <!-- Llamado a la acción -->
      <div class="project-cta">
        <a href="/projects" class="button">👈 Volver a proyectos</a>
        <a href="/contact" class="button-outline">💬 ¿Preguntas sobre este proyecto?</a>
      </div>
    </div>
  </section>
</BaseLayout>

<style>
  /* Estilos generales */
  .project-detail-section {
    padding: 3rem 0;
    background: #f8fafc;
    color: #333;
  }
  .project-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  /* Encabezado */
  .project-header {
    margin-bottom: 3rem;
    border-bottom: 2px solid #e2e8f0;
    padding-bottom: 2rem;
  }
  .project-header h1 {
    font-size: 2.5rem;
    color: #1a1a2e;
    display: flex;
    align-items: center;
    gap: 1rem;
  }
  .project-icon {
    font-size: 2rem;
  }
  .project-subtitle {
    font-size: 1.2rem;
    color: #64748b;
    margin-top: 0.5rem;
  }
  .project-meta {
    display: flex;
    gap: 1rem;
    margin-top: 1.5rem;
  }
  .meta-tag {
    background: #e2e8f0;
    padding: 0.3rem 0.8rem;
    border-radius: 20px;
    font-size: 0.9rem;
  }

  /* Secciones */
  .project-section {
    margin-bottom: 3rem;
    background: white;
    padding: 1.5rem;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.05);
  }
  .project-section h2 {
    color: #2A5C9A;
    margin-top: 0;
    font-size: 1.5rem;
    border-bottom: 1px solid #e2e8f0;
    padding-bottom: 0.5rem;
  }

  /* Arquitectura */
  .architecture-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
    margin-top: 1rem;
  }
  .arch-diagram img {
    width: 100%;
    border-radius: 8px;
    border: 1px solid #ddd;
  }
  .caption {
    text-align: center;
    font-size: 0.9rem;
    color: #64748b;
    margin-top: 0.5rem;
  }
  .arch-components ul {
    list-style: none;
    padding: 0;
  }
  .arch-components li {
    padding: 0.8rem;
    margin-bottom: 0.5rem;
    background: #f0f7ff;
    border-radius: 6px;
  }

  /* Grids técnicos */
  .tech-grid, .metrics-grid, .lessons-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
    margin-top: 1.5rem;
  }
  .tech-category, .metric-card, .lesson-card {
    background: #f8fafc;
    padding: 1.2rem;
    border-radius: 8px;
    border-left: 4px solid #2A5C9A;
  }
  .tech-category h3, .metric-card h3, .lesson-card h3 {
    margin-top: 0;
    color: #1e293b;
  }
  .tech-category ul, .lesson-card ul {
    list-style: none;
    padding: 0;
  }
  .tech-category li, .lesson-card li {
    padding: 0.5rem 0;
    border-bottom: 1px dashed #e2e8f0;
  }

  /* Repositorios */
  .repo-links {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    margin: 1.5rem 0;
  }
  .repo-button {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.8rem 1.5rem;
    background: #1a1a2e;
    color: white;
    border-radius: 6px;
    text-decoration: none;
    transition: transform 0.3s;
  }
  .repo-button:hover {
    transform: translateY(-2px);
    background: #2A5C9A;
  }

  /* Botones */
  .project-cta {
    display: flex;
    justify-content: space-between;
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 2px solid #e2e8f0;
  }
  .button {
    background: #2A5C9A;
    color: white;
    padding: 0.8rem 1.8rem;
    border-radius: 6px;
    text-decoration: none;
    font-weight: 600;
    transition: transform 0.3s;
  }
  .button:hover {
    transform: translateY(-2px);
  }
  .button-outline {
    border: 2px solid #2A5C9A;
    color: #2A5C9A;
    padding: 0.8rem 1.8rem;
    border-radius: 6px;
    text-decoration: none;
    font-weight: 600;
    transition: all 0.3s;
  }
  .button-outline:hover {
    background: #f0f7ff;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .architecture-grid {
      grid-template-columns: 1fr;
    }
    .project-cta {
      flex-direction: column;
      gap: 1rem;
    }
  }
</style>