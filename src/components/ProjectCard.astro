---
const { 
  title, 
  description, 
  icon, 
  tags, 
  links = [], 
  architecture = null 
} = Astro.props;

const getLinkIcon = (type) => {
  switch(type) {
    case 'github': return 'üêô';
    case 'live': return 'üåê';
    case 'more': return 'üîç';
    default: return 'üîó';
  }
};
---

<article class="project-card">
  <div class="project-icon">{icon}</div>
  <div class="project-content">
    <h3>{title}</h3>
    <p>{description}</p>
    
    {tags && tags.length > 0 && (
      <div class="tags">
        {tags.map(tag => <span class="tag">{tag}</span>)}
      </div>
    )}

    {architecture && (
      <button class="arch-button" onclick={`showArchitecture('${architecture}')`}>
        üèóÔ∏è Ver Arquitectura
      </button>
    )}

    {links.length > 0 && (
      <div class="links-container">
        <div class="link-items">
          {links.map(link => (
            <a 
              href={link.url}
              class="link-button"
              data-type={link.type || 'default'}
              {...(link.external ? { target: "_blank", rel: "noopener noreferrer" } : {})}
            >
              {getLinkIcon(link.type)}
              <span>
                {link.name || 
                 (link.type === 'github' ? 'Repositorio' : 
                  link.type === 'live' ? 'Demo Live' : 
                  'Ver m√°s')}
              </span>
            </a>
          ))}
        </div>
      </div>
    )}
  </div>
</article>

<style>
  .project-card {
    background: white;
    border-radius: 12px;
    padding: 1.5rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
    transition: all 0.3s ease;
    border-left: 4px solid #2A5C9A;
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .project-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
  }

  .project-icon {
    font-size: 2rem;
    margin-bottom: 1rem;
  }

  .project-content {
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .project-content h3 {
    margin: 0 0 0.5rem 0;
    color: #1e293b;
  }

  .project-content p {
    margin: 0 0 1rem 0;
    color: #64748b;
    line-height: 1.5;
  }

  .links-container {
    margin-top: auto;
    padding-top: 1rem;
  }

  .link-items {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .link-button {
    display: inline-flex;
    align-items: center;
    gap: 0.3rem;
    padding: 0.5rem 0.8rem;
    border-radius: 6px;
    text-decoration: none;
    font-size: 0.85rem;
    transition: all 0.2s ease;
    border: 1px solid transparent;
  }

  /* Estilos base para botones */
  .link-button {
    background: #f0f7ff;
    color: #2A5C9A;
    border-color: #dbeafe;
  }

  .link-button:hover {
    background: #2A5C9A;
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 2px 4px rgba(42, 92, 154, 0.2);
  }

  /* Estilos espec√≠ficos para tipos de links */
  .link-button[data-type="github"] {
    background: #f5f5f5;
    color: #333;
    border-color: #e5e5e5;
  }

  .link-button[data-type="github"]:hover {
    background: #333;
    color: white;
  }

  .link-button[data-type="live"] {
    background: #f0fdf4;
    color: #166534;
    border-color: #bbf7d0;
  }

  .link-button[data-type="live"]:hover {
    background: #166534;
    color: white;
  }

  .link-button[data-type="more"] {
    background: #f8fafc;
    color: #334155;
    border-color: #e2e8f0;
  }

  .link-button[data-type="more"]:hover {
    background: #334155;
    color: white;
  }

  /* Estilos para tags */
  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.4rem;
    margin: 1rem 0;
  }

  .tag {
    background: #f0f7ff;
    color: #2A5C9A;
    padding: 0.3rem 0.6rem;
    border-radius: 20px;
    font-size: 0.75rem;
    font-weight: 500;
  }

  /* Bot√≥n de arquitectura */
  .arch-button {
    margin-top: 1rem;
    padding: 0.5rem 1rem;
    background: #f5f3ff;
    color: #5b21b6;
    border: 1px solid #ddd6fe;
    border-radius: 6px;
    cursor: pointer;
    transition: all 0.2s;
  }

  .arch-button:hover {
    background: #5b21b6;
    color: white;
  }
</style>